{"tagline":"A completely free diff/patch/merge library for text documents","google":"","note":"Don't delete this file! It's used internally to help with page regeneration.","name":"PyTextDiff","body":"PyTextDiff\r\n==========\r\n\r\n[![Build Status](http://176.58.119.7:8080/job/PyTextDiff/badge/icon)](http://176.58.119.7:8080/job/PyTextDiff/)\r\n\r\nThe ability to keep various versions of documents and view changes between versions is something that is widely adopted in the programming community and there are numerous free or paid solutions available. The requirements for version control of text documents is similar, yet subtly different.  In many instances an entire paragraph may be on a single line, and hence most programming version control systems would 'diff' an entire paragraph even if only a word was changed.  Generating diffs by words can be messy and where multiple editors are working on a single piece of text may lead to sentences that don't make read correctly if two users modify the same sentence in different ways.\r\n\r\nPyTextDiff attempts to solve this riddle by generating diffs by 'sentence part,' that is either whole sentences or through key puncutation.  For instance if we took a sentence:\r\n\r\n    This is a diff. Do you like it?\r\n    \r\nand changed it to\r\n\r\n    This is a diff.  I really like it!\r\n    \r\nPyTextDiff would generate a 'diff' something like:\r\n\r\n    - Do you like it?\r\n    + I really like it!\r\n\r\nPyTextDiff is 'punctuation aware', and retains newlines wtihin text.  This means that changing the puncutation at the end of a sentence will generate a diff for only that part of the sentence.  For instance\r\n\r\n    This is my original text.\r\n    \r\nIf changed to\r\n\r\n    This is my original text! \r\n    \r\nWould generate a 'diff' like\r\n\r\n    - .\r\n    + !\r\n\r\nAs most version control diff formats (for instance the unified format) are geared towards programming files, a custom diff format is used which is a string that can be saved to database or file.  PyTextDiff is able to 'pack' and 'unpack' these strings into an internal diff object.\r\n\r\nAvailability\r\n============\r\n\r\nPyTextDiff is available as completely free and open source software under the permissive MIT license. There are no requirements for using the code in your own project, however if you do use this library, it would be really nice to know about it!\r\n\r\nCurrently PyTextDiff is in active development and hence not suitable for a production environment.  Some function names and behaviour **will** change before a 'version 1.0' is released.  \r\n\r\n\r\nFeatures\r\n========\r\n\r\nCurrently PyFreeDiff allows:\r\n - Generate diffs at sentence level\r\n - Apply patches to a file\r\n - Remove patches from a file\r\n - A complete set of unit tests\r\n\r\nRoadmap\r\n=========\r\n\r\nCurrently in development:\r\n - Three way merge\r\n\r\nUsage\r\n=====\r\n\r\nClone the repository to your local computer. \r\n\r\nA simple example usage may be as follows\r\n\r\n    from PyTextDiff import DiffEngine\r\n\r\n    sd = DiffEngine()\r\n    t1 = \"This is a sample. Text of awesomeness. Can I patch it?\"\r\n    t2 = \"This is a sample.  Text of awesomeness.  Can I change it? Should I play it?  Can I patch it?\"\r\n    diffs = sd.diff(t1, t2)\r\n    t3 = sd.apply_patch(t1, diffs)\r\n    print t2\r\n    print t3\r\n    print t2 == t3\r\n\r\n    t4 = sd.remove_patch(t3, diffs)\r\n    print t4\r\n    print t1\r\n    print t4 == t1\r\n\r\n\r\nThe unit tests can be run as follows, from within the PyTextDiff directory\r\n\r\n    >>> python PyTextDiffTests.py\r\n\r\n\r\nLicense\r\n=======\r\n\r\nThe MIT License (MIT)\r\nCopyright (c) 2012, William Hart\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy of\r\nthis software and associated documentation files (the \"Software\"), to deal in\r\nthe Software without restriction, including without limitation the rights to use,\r\ncopy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\nSoftware, and to permit persons to whom the Software is furnished to do so,\r\nsubject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all\r\ncopies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\r\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\r\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\r\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\r\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n"}